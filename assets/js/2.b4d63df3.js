(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{307:function(t,e,s){t.exports=s.p+"assets/img/aws-classroom-setup15.5f332920.png"},311:function(t,e,s){t.exports=s.p+"assets/img/aws-classroom-setup12.b0856cfe.png"},312:function(t,e,s){t.exports=s.p+"assets/img/aws-classroom-setup16.df90114d.png"},330:function(t,e,s){t.exports=s.p+"assets/img/mongo-connect-options.ac4d4be9.png"},368:function(t,e,s){t.exports=s.p+"assets/img/mongo-homepage.ab3e76a9.png"},369:function(t,e,s){t.exports=s.p+"assets/img/mongo-atlas-create-account.30dfcda3.png"},370:function(t,e,s){t.exports=s.p+"assets/img/mongo-atlas-confirmation-email.75dd2831.png"},371:function(t,e,s){t.exports=s.p+"assets/img/mongo-atlas-login.e8772dae.png"},372:function(t,e,s){t.exports=s.p+"assets/img/mongo-create-cluster.70967fa3.png"},373:function(t,e,s){t.exports=s.p+"assets/img/mongo-shared-clusters.7eddf090.png"},374:function(t,e,s){t.exports=s.p+"assets/img/mongo-cluster-provider.7c414a5b.png"},375:function(t,e,s){t.exports=s.p+"assets/img/mongo-cluster-size.6d814b8e.png"},376:function(t,e,s){t.exports=s.p+"assets/img/mongo-cluster-name.ead36e99.png"},377:function(t,e,s){t.exports=s.p+"assets/img/mongo-cluster-dashboard.48fa593c.png"},378:function(t,e,s){t.exports=s.p+"assets/img/mongo-whitelist-ips.4e635c11.png"},379:function(t,e,s){t.exports=s.p+"assets/img/mongo-create-user.08dd85da.png"},380:function(t,e,s){t.exports=s.p+"assets/img/mongo-choose-connection-method.d6cf4669.png"},381:function(t,e,s){t.exports=s.p+"assets/img/mongo-connect-string.a0fac0d2.png"},382:function(t,e,s){t.exports=s.p+"assets/img/mongo-connect-string2.93e1fbd7.png"},383:function(t,e,s){t.exports=s.p+"assets/img/aws-classroom.b70bbfb5.png"},384:function(t,e,s){t.exports=s.p+"assets/img/aws-search-ecs.20ef23ea.png"},385:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-get-started.feb83cd5.png"},386:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-hierarchy.91fe84ad.png"},387:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-1.aea3d618.png"},388:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-2.a6479fa1.png"},389:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-3.01b915d9.png"},390:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-4.b66a7e77.png"},391:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-5.3ce3c149.png"},392:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-6.97d84700.png"},393:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-7.bb3421d3.png"},394:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-8.19afe33d.png"},395:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-9.850e46d2.png"},396:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-10.b4911e15.png"},397:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-11.bc0c488a.png"},398:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-12.c8a556a1.png"},399:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-13.483a909b.png"},400:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-14.aae53a3a.png"},401:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-15.5c9d3a88.png"},402:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-16.a8aaea5c.png"},403:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-17.6a5fa157.png"},404:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-18.239e2407.png"},405:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-19.7d8a6c40.png"},406:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-20.ec87ce70.png"},407:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-21.78fd5dbf.png"},408:function(t,e,s){t.exports=s.p+"assets/img/aws-ecs-step-22.67f07ea5.png"},409:function(t,e,s){t.exports=s.p+"assets/img/aws-navigate-ec2.8fac0c20.png"},410:function(t,e,s){t.exports=s.p+"assets/img/aws-ec2-dashboard.7d29c3d2.png"},411:function(t,e,s){t.exports=s.p+"assets/img/aws-load-balancer-details.a2d5cc62.png"},510:function(t,e,s){"use strict";s.r(e);var a=s(42),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("WeekHeader",{attrs:{number:14,title:"Production Deployment"}}),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("Assignment Reminder")]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/deliverables/final.html"}},[t._v("Final project - GIFTR")]),t._v(" is due by "),a("strong",[t._v("6:00 pm April 20, 2022")]),t._v("."),a("br"),t._v("\nThis is the final deadline. There will be no extensions.")],1),t._v(" "),a("p",[t._v("Counts for 30% of your MAD9124 final grade.")])]),t._v(" "),a("h2",{attrs:{id:"architecture"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#architecture"}},[t._v("#")]),t._v(" Architecture")]),t._v(" "),a("p",[t._v("Of all cloud infrastructure service providers, Amazon Web Services (AWS) is far and away the market leader. We will take advantage of their generous education credits to learn how to deploy the final project using a typical architectural pattern.")]),t._v(" "),a("p",[t._v("Your main web service API application will be bundled into a Docker container which can be auto-scaled in response to service demand. This service container cluster will be accessed via an Application Load Balancer, which can also manage the secure HTTPS connection with the client application. The Node Express containers will talk to a MongoDB service running in another high-availability cluster.")]),t._v(" "),a("p",[t._v("Additionally, your client application from MAD9022 could be served from a global content delivery network – but we will not tackle that for this project.")]),t._v(" "),a("p",[t._v("The key service components that you typically need include:")]),t._v(" "),a("p",[a("strong",[t._v("Backend Web Service")])]),t._v(" "),a("ul",[a("li",[t._v("Docker Hub (image repository)")]),t._v(" "),a("li",[t._v("Amazon Virtual Private Cloud (VPC)")]),t._v(" "),a("li",[a("strike",[t._v("AWS Certificate Manager")])],1),t._v(" "),a("li",[t._v("Amazon Elastic Application Load Balancer (ELB)")]),t._v(" "),a("li",[t._v("Amazon Elastic Container Service (ECS) with Fargate")]),t._v(" "),a("li",[t._v("MongoDB Atlas – deployed to a managed Amazon Elastic Cloud Compute (EC2) Cluster")])]),t._v(" "),a("p",[a("strong",[t._v("Frontend Client APP")])]),t._v(" "),a("ul",[a("li",[a("strike",[t._v("Amazon Simple Storage Service (S3)")])],1),t._v(" "),a("li",[a("strike",[t._v("Amazon CloudFront (CDN)")])],1),t._v(" "),a("li",[t._v("GitHub PWA Private Repo")])]),t._v(" "),a("h2",{attrs:{id:"setup-hosted-mongodb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setup-hosted-mongodb"}},[t._v("#")]),t._v(" Setup Hosted MongoDB")]),t._v(" "),a("p",[t._v("We will use the free tier of the "),a("a",{attrs:{href:"https://www.mongodb.com/cloud/atlas",target:"_blank",rel:"noopener noreferrer"}},[t._v("MongoDB Atlas"),a("OutboundLink")],1),t._v(" service to deploy a managed MongoDB service cluster to the same AWS region as our production Express server containers.")]),t._v(" "),a("h3",{attrs:{id:"create-a-mongodb-cloud-account"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-a-mongodb-cloud-account"}},[t._v("#")]),t._v(" Create a MongoDB cloud account")]),t._v(" "),a("p",[t._v("From the "),a("a",{attrs:{href:"https://www.mongodb.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MongoDB home page"),a("OutboundLink")],1),t._v(", click the green "),a("code",[t._v("Start Free")]),t._v(" button.\n"),a("img",{attrs:{src:s(368),alt:"MongoDB home page"}})]),t._v(" "),a("p",[t._v("Fill in the form to create your free account. "),a("strong",[t._v("Please use your Algonquin College email address")]),t._v(".\n"),a("img",{attrs:{src:s(369),alt:"Atlas sign-up form"}})]),t._v(" "),a("p",[t._v("You should shortly receive a confirmation email from MongoDB Atlas. Click the "),a("code",[t._v("Sign In")]),t._v(" button in that email.\n"),a("img",{attrs:{src:s(370),alt:"Confirmation email"}})]),t._v(" "),a("p",[t._v("That will take you to the "),a("a",{attrs:{href:"https://account.mongodb.com/account/login",target:"_blank",rel:"noopener noreferrer"}},[t._v("MongoDB Atlas login page"),a("OutboundLink")],1),t._v(".\n"),a("img",{attrs:{src:s(371),alt:"MongoDB Atlas Login"}})]),t._v(" "),a("h3",{attrs:{id:"create-database-cluster"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-database-cluster"}},[t._v("#")]),t._v(" Create Database Cluster")]),t._v(" "),a("p",[t._v("Follow the prompts to create your first Project and Cluster.")]),t._v(" "),a("p",[a("img",{attrs:{src:s(372),alt:"create cluster"}})]),t._v(" "),a("p",[t._v("Choose the "),a("strong",[t._v("Shared Clusters")]),t._v(" option on the left – the free one.\n"),a("img",{attrs:{src:s(373),alt:"shared clusters"}})]),t._v(" "),a("h4",{attrs:{id:"configure-cluster"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configure-cluster"}},[t._v("#")]),t._v(" Configure Cluster")]),t._v(" "),a("p",[t._v("Choose "),a("strong",[t._v("AWS")]),t._v(" as the cloud provider. "),a("strong",[t._v("DO NOT")]),t._v(" choose 'Multi-Region ...'")]),t._v(" "),a("p",[t._v("Choose the "),a("strong",[t._v("N. Virginia")]),t._v(" AWS Region.\n"),a("img",{attrs:{src:s(374),alt:"cluster configuration - AWS region"}})]),t._v(" "),a("p",[t._v("Under the heading "),a("strong",[t._v("Cluster Tier")]),t._v(", choose "),a("code",[t._v("M0 Sandbox")]),t._v(" – this is the free one.\n"),a("img",{attrs:{src:s(375),alt:"cluster configuration - size"}})]),t._v(" "),a("p",[t._v("Do not select any "),a("strong",[t._v("Additional Settings")]),t._v(". They are not available in the free tier.")]),t._v(" "),a("p",[t._v("Set the "),a("strong",[t._v("Cluster Name")]),t._v(" to "),a("code",[t._v("GIFTR")]),t._v(".\n"),a("img",{attrs:{src:s(376),alt:"cluster configuration - name"}})]),t._v(" "),a("p",[t._v("Verify your settings and click the green "),a("code",[t._v("Create Cluster")]),t._v(" button.")]),t._v(" "),a("p",[t._v("You should now see the "),a("strong",[t._v("Clusters Dashboard")]),t._v(" while your new cluster is being provisioned. There should be a blue "),a("code",[t._v("sandbox")]),t._v(" label on your cluster – this confirms that you correctly selected the free tier.\n"),a("img",{attrs:{src:s(377),alt:"cluster configuration - name"}})]),t._v(" "),a("h4",{attrs:{id:"set-up-connection-security"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-up-connection-security"}},[t._v("#")]),t._v(" Set-up Connection Security")]),t._v(" "),a("p",[t._v("There are still a few more steps. Click the "),a("code",[t._v("connect")]),t._v(" button under your cluster name to bring up an information modal.")]),t._v(" "),a("p",[t._v("You will be accessing this cluster from multiple locations – home, school, and your AWS containers. You could (and in a real app SHOULD) designate an allowed list of only the IP addresses that "),a("em",[t._v("need")]),t._v(" to connect to the database. But, for simplicity with this project simply allow all.\n"),a("img",{attrs:{src:s(378),alt:"cluster configuration - IP addresses"}})]),t._v(" "),a("p",[t._v("Click the "),a("code",[t._v("Add a Different IP Address")]),t._v(" button, and then enter "),a("code",[t._v("0.0.0.0/0")]),t._v(" for the IP address ("),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing",target:"_blank",rel:"noopener noreferrer"}},[t._v("CDIR notation"),a("OutboundLink")],1),t._v(") and click "),a("code",[t._v("Add IP Address")]),t._v(".")]),t._v(" "),a("p",[t._v("Next you will be asked to create an new administrative user for your database cluster. I called mine "),a("code",[t._v("madadmin")]),t._v(" and selected the "),a("code",[t._v("autogenerate password")]),t._v(" option for a reasonably secure random password.")]),t._v(" "),a("p",[a("img",{attrs:{src:s(379),alt:"create database user"}})]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("Copy the password")]),t._v(" "),a("p",[t._v("Don't forget to click the "),a("code",[t._v("show")]),t._v(" button next to the password, and then copy it to your config JSON file. "),a("strong",[t._v("You will never see this password again.")])])]),t._v(" "),a("p",[t._v("You will need to get the connection string details for this new database cluster. Click the "),a("code",[t._v("Choose connection method")]),t._v(" button at the bottom of the modal.\n"),a("img",{attrs:{src:s(380),alt:"create database user"}})]),t._v(" "),a("p",[t._v("You want the middle option "),a("strong",[t._v("Connect your application")]),t._v(".\n"),a("img",{attrs:{src:s(330),alt:"cluster connection options"}})]),t._v(" "),a("p",[t._v("Copy the "),a("strong",[t._v("hostname")]),t._v(" portion of the connection string. It will go in your config JSON file later.\n"),a("img",{attrs:{src:s(381),alt:"cluster connection string"}})]),t._v(" "),a("p",[t._v("Copy the "),a("strong",[t._v("authentication database name")]),t._v(" portion of the connection string. You will need that in your config JSON file too.\n"),a("img",{attrs:{src:s(382),alt:"cluster connection string"}})]),t._v(" "),a("h3",{attrs:{id:"connect-mongoose-to-the-atlas-cluster"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#connect-mongoose-to-the-atlas-cluster"}},[t._v("#")]),t._v(" Connect Mongoose to the Atlas Cluster")]),t._v(" "),a("p",[t._v("Up until now, the connection string in your Express application code to tell Mongoose how to open a connection to the database took this format:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mongodb://hostname:port/database-name\n")])])]),a("p",[t._v("e.g.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mongodb://localhost:27017/mad9124\n")])])]),a("h4",{attrs:{id:"hosted-atlas-cluster"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hosted-atlas-cluster"}},[t._v("#")]),t._v(" Hosted Atlas Cluster")]),t._v(" "),a("p",[t._v("The full connection string for MongoDB databases hosted on an Atlas cluster look a little different. Here is what mine looks like:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mongodb+srv://<username>:<password>@giftr-1p8fa.mongodb.net/test?retryWrites=true&w=majority\n")])])]),a("p",[a("em",[t._v("(Don't use this one. Go get your own.)")])]),t._v(" "),a("h5",{attrs:{id:"from-the-above-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#from-the-above-example"}},[t._v("#")]),t._v(" From the above example")]),t._v(" "),a("p",[t._v("The scheme changes to "),a("code",[t._v("mongodb+srv://")])]),t._v(" "),a("p",[t._v("Database user credentials are inserted: "),a("code",[t._v("<username>:<password>@")])]),t._v(" "),a("p",[t._v("The hostname becomes "),a("code",[t._v("_something_.mongodb.net")]),a("br"),t._v("\n(where "),a("em",[t._v("something")]),t._v(" is your unique cluster name)")]),t._v(" "),a("p",[t._v("The default database "),a("code",[t._v("/test")]),t._v(" is used to authenticate the db user.")]),t._v(" "),a("p",[t._v("There are some other options set at the end: "),a("code",[t._v("?retryWrites=true&w=majority")])]),t._v(" "),a("h3",{attrs:{id:"update-the-connectdatabase-js-module"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#update-the-connectdatabase-js-module"}},[t._v("#")]),t._v(" Update the "),a("code",[t._v("connectDatabase.js")]),t._v(" Module")]),t._v(" "),a("p",[t._v("It is a very common practice to set up a final integration testing or staging environment that very closely mirrors the production environment. That is what we are going to do for the final project. This will simplify some of the deployment details.")]),t._v(" "),a("p",[t._v("Remember the configuration variables are retrieved using the "),a("code",[t._v("config.get()")]),t._v(" method. We will set the "),a("code",[t._v("NODE_ENV")]),t._v(" environment variable to"),a("code",[t._v("stage")]),t._v(", so you will need to create a new "),a("code",[t._v("/config/stage.json")]),t._v(" file with your connection credentials. e.g.")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"db"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scheme"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mongodb+srv"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"username"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"madadmin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"password"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yourGuessIsAsGoodAsMine"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"host"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"giftr-1p8fa.mongodb.net"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"authSource"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"w21-final-giftr"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("In a final production deployment, you would not store the database username and password in this config file. They should be injected into the runtime container using environment variables.")]),t._v(" "),a("p",[t._v("But, this will let me better help you with troubleshooting and help me with grading your assignment.")])]),t._v(" "),a("p",[t._v("Then refactor the "),a("code",[t._v("/startup/connectDatabase.js")]),t._v(" module, to conditionally construct the connection string based on the target scheme: "),a("code",[t._v("mongodb")]),t._v(" v.s. "),a("code",[t._v("mongodb+srv")]),t._v(".")]),t._v(" "),a("p",[t._v("The updated file should look something like this ...")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" config "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'config'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" mongoose "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mongoose'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" logger "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./logger.js'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" log "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" logger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("child")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("module"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'connectDB'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("connectDatabase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("scheme"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" authSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'db'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" credentials "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" username "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" password "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("username"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("password"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("@")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" connectionString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("scheme"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("://")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("credentials"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("host"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("scheme "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mongodb'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    connectionString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("?authSource=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("authSource"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    connectionString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("authSource"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("?retryWrites=true&w=majority")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" mongoose"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("connectionString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      useNewUrlParser"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      useUnifiedTopology"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      useCreateIndex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      useFindAndModify"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      dbName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" name\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Connected to MongoDB @ ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Error connecting to MongoDB ...")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("OK. LET'S TEST IT!")])]),t._v(" "),a("p",[t._v("Update the "),a("code",[t._v("scripts")]),t._v(" key of the "),a("code",[t._v("package.json")]),t._v(" file to add a "),a("code",[t._v("stage")]),t._v(" script. It will be the same as the "),a("code",[t._v("dev")]),t._v(" script except the environment variable should be set as "),a("code",[t._v("NODE_ENV=stage")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"test"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo \\"Error: no test specified\\" && exit 1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dev"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"API_JWTKEY=supersecretkey nodemon server.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"stage"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NODE_ENV=stage API_JWTKEY=supersecretkey nodemon server.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"start"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node server.js"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("p",[t._v("Start the server using this new script – "),a("code",[t._v("npm run stage")]),t._v(" – in the terminal and use Postman to make sure that everything is working.")]),t._v(" "),a("p",[t._v("You can still visually check the contents of the database with MongoDB Compass. Use the full connection string from the Atlas dashboard (third option) to create a new connection in MongoDB Compass.")]),t._v(" "),a("p",[a("img",{attrs:{src:s(330),alt:"cluster connection options"}})]),t._v(" "),a("p",[t._v("Don't forget to replace "),a("code",[t._v("<password>")]),t._v(" with your real password. e.g.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("mongodb+srv://madadmin:yourGuessIsAsGoodAsMine@giftr-1p8fa.mongodb.net/test\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Take a short break")]),t._v(" "),a("p",[t._v("If you have everything working, take a short break before tackling the next steps.")])]),t._v(" "),a("h2",{attrs:{id:"health-check-route"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#health-check-route"}},[t._v("#")]),t._v(" Health Check Route")]),t._v(" "),a("p",[t._v("Most production deployments will have some kind of automated periodic monitoring to see if your deployed service is still up and running. We facilitate this by creating a simple HTTP route handler in the main "),a("code",[t._v("app.js")]),t._v(" module. It could be anything that you choose. The AWS Application Load Balancer will default to the root path for your web service, so let's just use that for now.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("healthStatus"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'UP'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Amazon's Elastic Container Service (ECS) will regularly poll this route looking for a "),a("code",[t._v("200")]),t._v(" response code. You will be able to see the health status in the AWS CloudWatch console.")]),t._v(" "),a("h2",{attrs:{id:"publish-a-docker-image"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#publish-a-docker-image"}},[t._v("#")]),t._v(" Publish a Docker Image")]),t._v(" "),a("p",[t._v("In most development teams these days, everyone needs to know a little about "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/DevOps",target:"_blank",rel:"noopener noreferrer"}},[t._v("DevOps"),a("OutboundLink")],1),t._v(". You could do a whole course on Docker, containers, and Kubernetes, but for now we are going to simulate a scenario that you are very like to encounter. As a junior developer, a more senior developer on the team has already designed the correct procedure to bundle and deploy your application, and they will give you some key files and instructions.")]),t._v(" "),a("p",[t._v("Starting in module 5, you have been using Docker as an easy way to run MongoDB in your local development environment. You used a pre-made Docker Image definition (mongo:bionic) that was pulled from the public Docker Hub repository.")]),t._v(" "),a("p",[t._v("You can create and publish your own Docker Image to bundle your Express web service application. This image can then be use to deploy one or more copies of your application on a cloud hosting service like AWS, Azure, or Google Cloud.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("If you haven't already ...")]),t._v(" "),a("p",[t._v("Create a free "),a("a",{attrs:{href:"https://hub.docker.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker Hub"),a("OutboundLink")],1),t._v(" account."),a("br"),t._v("\nDownload "),a("strong",[t._v("Docker Desktop")]),t._v(" and run the installer.")])]),t._v(" "),a("h3",{attrs:{id:"create-a-dockerfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-a-dockerfile"}},[t._v("#")]),t._v(" Create a Dockerfile")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("Dockerfile")]),t._v(" is the recipe for creating a Docker Image. It should be placed in the top level of your project folders. Note the capitalization and there is no extension - just "),a("code",[t._v("Dockerfile")]),t._v(".")]),t._v(" "),a("p",[t._v("This will use the "),a("a",{attrs:{href:"https://hub.docker.com/_/node",target:"_blank",rel:"noopener noreferrer"}},[t._v("official node version 14 image"),a("OutboundLink")],1),t._v(" from Docker Hub as the starting point. It then creates the directory structure that your project requires and copies your code from your development project folder into the container image.")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("Check the names of your folders")]),t._v(" "),a("p",[t._v("Make sure that your project folder structure matches the Dockerfile.")])]),t._v(" "),a("div",{staticClass:"language-docker extra-class"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("14"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("slim\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" API_PORT="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"80"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" DEBUG="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"api:*"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" mkdir "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p /app /app/config /app/exceptions /app/logs /app/middleware /app/models /app/public /app/routes /app/startup\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" config/ /app/config/\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" exceptions/ /app/exceptions/\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" middleware/ /app/middleware/\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" models/ /app/models/\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" public/ /app/public/\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" routes/ /app/routes/\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" startup/ /app/startup/\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" server.js app.js package.json /app/\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /app\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" npm install "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("unsafe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("perm\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" 80\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CMD")]),t._v(" node server.js\n")])])]),a("h3",{attrs:{id:"split-server-js-and-app-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#split-server-js-and-app-js"}},[t._v("#")]),t._v(" Split server.js and app.js")]),t._v(" "),a("p",[t._v("That final line in the Dockerfile, "),a("code",[t._v("CMD node server.js")]),t._v(". That is the command that will be invoked when the deployed container is started. If you have all of your Express application defined in "),a("code",[t._v("app.js")]),t._v(", then you could change the last line of the Dockerfile to be "),a("code",[t._v("CMD node app.js")]),t._v(".")]),t._v(" "),a("p",[t._v("Or, as we did in an earlier module, you might want to create both a "),a("code",[t._v("server.js")]),t._v(" file and an "),a("code",[t._v("app.js")]),t._v(" file. This is a quite common practice as it separates the code for defining the Express routing application in the "),a("code",[t._v("app.js")]),t._v(" file from the "),a("code",[t._v("server.js")]),t._v(" module which only holds the instructions spinning up the Node.js HTTP server, and passing in the "),a("code",[t._v("app.js")]),t._v(" module as a configuration object to the server.")]),t._v(" "),a("p",[t._v("Here is an example "),a("code",[t._v("server.js")]),t._v(" file serving only HTTP."),a("br"),t._v(" "),a("strong",[t._v("This is what you should use for your final project.")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" http "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" logger "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./startup/logger.js'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" app "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./app.js'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Create HTTP server.\n * HTTP server listen on provided port, on all network interfaces.\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" server "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" port "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("API_PORT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3030")]),t._v("\nserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'listening'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onListening"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Common listener callback functions\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  logger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Express failed to listen on port ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" ...")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stack\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onListening")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  logger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'info'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Express is listening on port ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" ...")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("If you are going to be running your Node.js server with HTTPS, you "),a("strong",[t._v("must")]),t._v(" set it up this way.")])]),t._v(" "),a("p",[t._v('Here is how it would look if we set it up to use HTTPS with a "let\'s encrypt" certificate.'),a("br"),t._v(" "),a("strong",[t._v("This is for your future reference only. DO NOT use this for your final project.")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'use strict'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" http "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" https "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" fs "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" logger "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./startup/logger.js'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" app "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./app.js'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Create HTTP server.\n * HTTP server listen on provided port, on all network interfaces.\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" server "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" port "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("API_PORT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3030")]),t._v("\nserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'listening'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onListening"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Create HTTPS server.\n * HTTPS server listen on standard port, on all network interfaces.\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NODE_ENV")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'production'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" options "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/etc/letsencrypt/live/mad9124.rocks/privkey.pem'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    cert"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/etc/letsencrypt/live/mad9124.rocks/fullchain.pem'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ca"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/etc/letsencrypt/live/mad9124.rocks/chain.pem'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" serverSSL "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" TLSPort "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("APP_TLSPORT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v("\n  serverSSL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TLSPort"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  serverSSL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  serverSSL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'listening'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onListening"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Common listener callback functions\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onError")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  logger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Express failed to listen on port ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" ...")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stack\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onListening")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  logger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'info'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Express is listening on port ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" ...")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"simplified-app-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simplified-app-js"}},[t._v("#")]),t._v(" Simplified app.js")]),t._v(" "),a("p",[t._v("Now that the "),a("code",[t._v("app.js")]),t._v(" module doesn't need any code for creating the HTTP server, it can be simplified to something like this ...")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" express "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'express'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" connectDB "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./startup/connectDatabase'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("connectDB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" app "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("express")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Apply global middleware with app.use()")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add the health check route")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("healthStatus"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'UP'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Link the auth and api route handler modules")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Apply the global error handler middleware")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Export the `app` object")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" app\n")])])]),a("h3",{attrs:{id:"build-a-local-docker-image"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build-a-local-docker-image"}},[t._v("#")]),t._v(" Build a local Docker image")]),t._v(" "),a("p",[t._v("We have created the Dockerfile and refactored our code. It is time to build the container image with the "),a("a",{attrs:{href:"https://docs.docker.com/engine/reference/commandline/build/",target:"_blank",rel:"noopener noreferrer"}},[t._v("docker build"),a("OutboundLink")],1),t._v(" command. Use the "),a("code",[t._v("--tag=")]),t._v(" command option to set the name of the local Docker Image file that will be created. The "),a("code",[t._v(":latest")]),t._v(" suffix is the version label.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker build --tag=giftr-api-w21:latest .\n")])])]),a("p",[t._v("This will create an Ubuntu Linux container with Node v14 pre configured and then copy in your project files as defined in the "),a("code",[t._v("Dockerfile")]),t._v(". Then it will run "),a("code",[t._v("npm install")]),t._v(" in your container image's project root folder ("),a("code",[t._v("/app")]),t._v(") to ensure that all required dependencies are correctly installed.")]),t._v(" "),a("p",[t._v("When this process is complete you will have a new Docker Image that you can use to create an isolated runtime copy of your Express web service application. You can run it with Docker locally to test it.")]),t._v(" "),a("p",[t._v("Here is an updated "),a("code",[t._v("docker-compose.yml")]),t._v(" file that will use the image you just created to spin up a new container on your local machine for testing.")]),t._v(" "),a("p",[a("strong",[t._v("First, make sure that you stop any other Express server that you might have running.")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.8'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("express")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" giftr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("api"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("w21\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" giftr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("api"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("w21\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("API_JWTKEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" keur0uhwg802fkzh6e72lw0m69g3xv\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("API_PORT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("NODE_ENV")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stage'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" 3030"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" node server.js\n")])])]),a("p",[t._v("Now run "),a("code",[t._v("docker-compose up -d express")]),t._v(". If everything is configured correctly, your new API server container will spin up and try to authenticate with the MongoDB Atlas server that you set up earlier.")]),t._v(" "),a("p",[t._v("Try sending some test requests from Postman to "),a("code",[t._v("localhost:3030")]),t._v(". Then check the MongoDB Atlas database with MongoDB Compass to visually verify the requests went to the correct database.")]),t._v(" "),a("p",[t._v("If everything looks good you can publish the Docker Image to Docker Hub.")]),t._v(" "),a("h3",{attrs:{id:"tag-the-image"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tag-the-image"}},[t._v("#")]),t._v(" Tag the image")]),t._v(" "),a("p",[t._v("Before you can push the image up to Docker Hub, you need to "),a("code",[t._v("tag")]),t._v(" the local image with your Docker Hub username prefix. Replace "),a("code",[t._v("<username>")]),t._v(" with your Docker Hub username.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker tag giftr-api-w21 <username>/giftr-api-w21\n")])])]),a("h3",{attrs:{id:"push-the-image-to-docker-hub"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#push-the-image-to-docker-hub"}},[t._v("#")]),t._v(" Push the image to Docker Hub")]),t._v(" "),a("p",[t._v("Make sure that you are logged into Docker Hub. This command will prompt you for your Docker Hub username and password.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker login docker.io\n")])])]),a("p",[t._v("Now you can push it. Replace "),a("code",[t._v("<username>")]),t._v(" with your Docker Hub username.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker push <username>/giftr-api-w21\n")])])]),a("p",[a("strong",[t._v("Congratulations!")])]),t._v(" "),a("p",[t._v("You have successfully published your first Docker Image.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Take a short break")]),t._v(" "),a("p",[t._v("If you have everything working, take a short break before tackling the next steps.")])]),t._v(" "),a("h2",{attrs:{id:"deploying-to-aws"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploying-to-aws"}},[t._v("#")]),t._v(" Deploying to AWS")]),t._v(" "),a("p",[t._v("Now it is time to set up the hosting environment on AWS for your Docker container to run.")]),t._v(" "),a("h3",{attrs:{id:"aws-classroom-account"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aws-classroom-account"}},[t._v("#")]),t._v(" AWS Classroom Account")]),t._v(" "),a("p",[t._v("By now you should have received an email invitation to join our AWS Classroom and sign-up for a free AWS Educate - Student Account. There are "),a("a",{attrs:{href:"https://aws.amazon.com/education/awseducate/students/",target:"_blank",rel:"noopener noreferrer"}},[t._v("many benefits"),a("OutboundLink")],1),t._v(" attached to the free student account which you can use to continue your learning over the summer.")]),t._v(" "),a("p",[t._v('Once you have accepted the invitation and logged into the AWS Educate portal, find the link to "My Classrooms". You should see one listed for "'),a("strong",[t._v("Mobile API Development - W21")]),t._v('". Click the blue "Go to classroom" button on the right.\n'),a("img",{attrs:{src:s(383),alt:"AWS classrooms list"}})]),t._v(" "),a("p",[t._v("You will now be prompted to agree to the "),a("em",[t._v("terms and conditions")]),t._v(" for using the service.\n"),a("img",{attrs:{src:s(311),alt:"Vocareum dashboard"}})]),t._v(" "),a("p",[t._v("Your browser should be redirected to the "),a("strong",[t._v("Vocareum Dashboard")]),t._v(". Click on the card for Mobile API Development. This will open a summary page for your AWS Educate Classroom Account. It has some helpful FAQs and you can see your remaining credit balance for AWS services. You have been given a $50 for this classroom, which is more than enough to cover what we will do, and give you some credits to play with over the summer.\n"),a("img",{attrs:{src:s(307),alt:"AWS account summary"}})]),t._v(" "),a("p",[t._v("Click on the "),a("strong",[t._v("AWS Console")]),t._v(" button and you will be automatically logged into the AWS Console with your AWS Educate Classroom account.")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v('This may trigger the "pop-up blocker" in your browser. You will need to grant permission for this site. Look for the warning notice in the URL bar.')])]),t._v(" "),a("p",[t._v("Now you know how to get logged in. We can start doing real work!\n"),a("img",{attrs:{src:s(312),alt:"AWS console"}})]),t._v(" "),a("h3",{attrs:{id:"configure-the-elastic-container-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configure-the-elastic-container-service"}},[t._v("#")]),t._v(" Configure the Elastic Container Service")]),t._v(" "),a("h4",{attrs:{id:"_1-go-to-the-ecs-console"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-go-to-the-ecs-console"}},[t._v("#")]),t._v(" 1. Go to the ECS console")]),t._v(" "),a("p",[t._v("Type "),a("code",[t._v("ECS")]),t._v(" into the "),a("strong",[t._v("Find Services")]),t._v(" search box on the AWS Console and then select the "),a("strong",[t._v("Elastic Container Service")]),t._v(" "),a("img",{attrs:{src:s(384),alt:"AWS console - search"}})]),t._v(" "),a("h4",{attrs:{id:"_2-ecs-get-started"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-ecs-get-started"}},[t._v("#")]),t._v(" 2. ECS - Get Started")]),t._v(" "),a("p",[t._v("On the next screen you should see an orange "),a("strong",[t._v("Get Started")]),t._v(" button. Click that to begin the configuration process."),a("br"),t._v(" "),a("img",{attrs:{src:s(385),alt:"ECS console - get started"}})]),t._v(" "),a("h4",{attrs:{id:"_3-define-aws-ecs-container-task-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-define-aws-ecs-container-task-service"}},[t._v("#")]),t._v(" 3. Define AWS ECS Container/Task/Service")]),t._v(" "),a("p",[t._v("Now define the runtime parameters for your container service. There are several related parts and they fit together like Russian nesting dolls.")]),t._v(" "),a("ul",[a("li",[t._v("A container definition links to the Docker image that you pushed to DockerHub.")]),t._v(" "),a("li",[t._v("A task sets the resources (vCPU, RAM) for a container definition.")]),t._v(" "),a("li",[t._v("A service may include one or more related tasks, and defines scaling rules.")]),t._v(" "),a("li",[t._v("A cluster hosts one or more services and defines the general network settings.")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(386),alt:"ECS hierarchy diagram"}})]),t._v(" "),a("h5",{attrs:{id:"cluster-definition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cluster-definition"}},[t._v("#")]),t._v(" Cluster Definition")]),t._v(" "),a("p",[t._v("Click the orange "),a("strong",[t._v("Create Cluster")]),t._v(" button.")]),t._v(" "),a("p",[a("img",{attrs:{src:s(387),alt:"ECS configuration step 1"}})]),t._v(" "),a("p",[t._v("Choose "),a("strong",[t._v("Networking only")]),t._v(" and then click the blue "),a("strong",[t._v("Next step")]),t._v(" button at the bottom of the page.")]),t._v(" "),a("p",[a("img",{attrs:{src:s(388),alt:"ECS configuration step 2"}})]),t._v(" "),a("p",[t._v("Set the cluster name to "),a("code",[t._v("mad9124")]),t._v(", and click the blue "),a("strong",[t._v("Create")]),t._v(" button at the bottom of the page.")]),t._v(" "),a("p",[a("img",{attrs:{src:s(389),alt:"ECS configuration step 3"}})]),t._v(" "),a("p",[t._v("You should see a confirmation page.")]),t._v(" "),a("p",[a("img",{attrs:{src:s(390),alt:"ECS configuration step 4"}})]),t._v(" "),a("h5",{attrs:{id:"task-definition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#task-definition"}},[t._v("#")]),t._v(" Task Definition")]),t._v(" "),a("p",[t._v("Expand the left-hand menu and click on "),a("strong",[t._v("Task Definitions")]),t._v(". Then click the blue "),a("strong",[t._v("Create new Task Definition")]),t._v(" button.")]),t._v(" "),a("p",[a("img",{attrs:{src:s(391),alt:"ECS configuration step 5"}})]),t._v(" "),a("p",[t._v("Choose "),a("strong",[t._v("Fargate")]),t._v(" and click the blue "),a("strong",[t._v("next")]),t._v(" button at the bottom of the page.")]),t._v(" "),a("p",[a("img",{attrs:{src:s(392),alt:"ECS configuration step 6"}})]),t._v(" "),a("p",[t._v("Set the "),a("strong",[t._v("Task Definition Name")]),t._v(" to "),a("code",[t._v("giftr-api-task")]),t._v(" then scroll down to the "),a("em",[t._v("Task size")]),t._v(" section.")]),t._v(" "),a("p",[a("img",{attrs:{src:s(393),alt:"ECS configuration step 7"}})]),t._v(" "),a("p",[t._v("Set the "),a("strong",[t._v("Task memory (GB)")]),t._v(" to "),a("code",[t._v("0.5GB")]),t._v(".\nSet the "),a("strong",[t._v("Task CPU (vCPU)")]),t._v(" to "),a("code",[t._v("0.25 vCPU")]),t._v(".\nClick the blue "),a("strong",[t._v("Add container")]),t._v(" button.\n"),a("img",{attrs:{src:s(394),alt:"ECS configuration step 8"}})]),t._v(" "),a("h5",{attrs:{id:"container-definition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#container-definition"}},[t._v("#")]),t._v(" Container Definition")]),t._v(" "),a("p",[a("img",{attrs:{src:s(395),alt:"ECS configuration step 9"}})]),t._v(" "),a("p",[t._v("Set these settings in the "),a("strong",[t._v("Standard")]),t._v(" section of the configuration form:")]),t._v(" "),a("ul",[a("li",[t._v("Container name: "),a("code",[t._v("giftr-api-w21")])]),t._v(" "),a("li",[t._v("Image: "),a("code",[t._v("<Docker-Hub-username>/giftr-api-w21")])]),t._v(" "),a("li",[t._v("Soft limit: "),a("code",[t._v("300")])]),t._v(" "),a("li",[t._v("Port mapping: "),a("code",[t._v("80")])])]),t._v(" "),a("p",[t._v("Scroll down to the "),a("strong",[t._v("Environment Variables")]),t._v(" section.\n"),a("img",{attrs:{src:s(396),alt:"ECS configuration step 10"}})]),t._v(" "),a("p",[t._v("Add the following "),a("em",[t._v("key=value")]),t._v(" pairs:")]),t._v(" "),a("ul",[a("li",[t._v("NODE_ENV = "),a("code",[t._v("stage")])]),t._v(" "),a("li",[t._v("API_PORT = "),a("code",[t._v("80")])]),t._v(" "),a("li",[t._v("API_JWTKEY = "),a("code",[t._v("<your-secret-random-key>")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("Use the "),a("code",[t._v("genKey.js")]),t._v(" script from week 11 to generate a new random key.")])]),t._v(" "),a("p",[t._v("Click the blue "),a("strong",[t._v("Add")]),t._v(" button in the bottom right corner. This will create the Container Definition and close the slide-over panel.")]),t._v(" "),a("p",[t._v("Now, scroll all the way to the bottom and click the blue "),a("strong",[t._v("Create")]),t._v(" button in the bottom right corner to complete the Task Definition.")]),t._v(" "),a("p",[a("img",{attrs:{src:s(397),alt:"ECS configuration step 11"}})]),t._v(" "),a("h5",{attrs:{id:"service-definition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#service-definition"}},[t._v("#")]),t._v(" Service Definition")]),t._v(" "),a("p",[t._v("In the left-hand menu choose "),a("strong",[t._v("Clusters")]),t._v(" again. Click the orange "),a("strong",[t._v("Deploy")]),t._v(" button.\n"),a("img",{attrs:{src:s(398),alt:"ECS configuration step 12"}}),t._v("\nIn the "),a("strong",[t._v("Environment")]),t._v(" section choose your "),a("strong",[t._v("Existing cluster")]),t._v(": "),a("code",[t._v("mad9124")]),t._v(".")]),t._v(" "),a("p",[t._v("Set application type to "),a("strong",[t._v("Service")])]),t._v(" "),a("p",[t._v("The task definition "),a("strong",[t._v("Family")]),t._v(" should be "),a("code",[t._v("giftr-api-task")]),t._v(" with revision as "),a("code",[t._v("LATEST")]),t._v(".")]),t._v(" "),a("p",[t._v("Give the service a name of "),a("code",[t._v("giftr-api-service")]),t._v(", and set the desired number of tasks at "),a("code",[t._v("2")]),t._v(".\n"),a("img",{attrs:{src:s(399),alt:"ECS configuration step 13"}})]),t._v(" "),a("p",[t._v("Scroll down a little to setup the "),a("strong",[t._v("Load Balancing")]),t._v(" options. Create a "),a("strong",[t._v("new")]),t._v(" "),a("code",[t._v("Application Load Balancer")]),t._v(" and call it "),a("code",[t._v("giftr-api-elb")]),t._v(".")]),t._v(" "),a("p",[t._v("Set it to listen on port "),a("code",[t._v("80")]),t._v(" with protocol "),a("code",[t._v("http")]),t._v(".")]),t._v(" "),a("p",[t._v("Set the "),a("strong",[t._v("Target group name")]),t._v(" to "),a("code",[t._v("giftr-api-ecs-target-group")]),t._v(" and the protocol to "),a("code",[t._v("http")]),t._v(".")]),t._v(" "),a("p",[t._v("Now click the orange "),a("strong",[t._v("Deploy")]),t._v(" button.\n"),a("img",{attrs:{src:s(400),alt:"ECS configuration step 14"}})]),t._v(" "),a("p",[t._v("Notice the blue banner message at the top of the next screen.\n"),a("img",{attrs:{src:s(401),alt:"ECS configuration step 15"}})]),t._v(" "),a("p",[t._v("After a few minutes all of the service infrastructure will be deployed and ready.\n"),a("img",{attrs:{src:s(402),alt:"ECS configuration step 16"}})]),t._v(" "),a("h5",{attrs:{id:"open-the-firewall"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#open-the-firewall"}},[t._v("#")]),t._v(" Open the firewall")]),t._v(" "),a("p",[t._v("One last step. You need to open the firewall on your virtual network to allow incoming HTTP traffic from Postman or your browser client application.")]),t._v(" "),a("p",[t._v("This is controlled in another part of the AWS console. From the "),a("strong",[t._v("Services")]),t._v(" menu at the top of the screen, choose "),a("strong",[t._v("EC2")]),t._v(" in the Compute section.")]),t._v(" "),a("p",[t._v("The "),a("strong",[t._v("Resources")]),t._v(" panel in the middle of the screen shows several options. Click on the one called "),a("strong",[t._v("Security Groups")]),t._v(".")]),t._v(" "),a("p",[a("img",{attrs:{src:s(403),alt:"ECS configuration step 17"}})]),t._v(" "),a("p",[t._v("You will hav on one default security group. Select it in the top half of the screen, and then click the "),a("strong",[t._v("Inbound rules")]),t._v(" tab in the lower half of the screen.")]),t._v(" "),a("p",[a("img",{attrs:{src:s(404),alt:"ECS configuration step 18"}})]),t._v(" "),a("p",[t._v("Click the "),a("strong",[t._v("Edit inbound rules")]),t._v(" button.\n"),a("img",{attrs:{src:s(405),alt:"ECS configuration step 19"}})]),t._v(" "),a("p",[t._v("Now click the "),a("strong",[t._v("Add rule")]),t._v(" button. Select "),a("strong",[t._v("HTTP")]),t._v(" from the type drop-down list. Select "),a("strong",[t._v("Anywhere")]),t._v(" from the source drop-down list.\n"),a("img",{attrs:{src:s(406),alt:"ECS configuration step 20"}}),t._v(" "),a("img",{attrs:{src:s(407),alt:"ECS configuration step 21"}})]),t._v(" "),a("p",[t._v("Click the orange "),a("strong",[t._v("Save rules")]),t._v(" button.\n"),a("img",{attrs:{src:s(408),alt:"ECS configuration step 22"}})]),t._v(" "),a("p",[a("strong",[t._v("WOOO HOOOO! You have launched your first AWS CloudFormation Stack!")])]),t._v(" "),a("h4",{attrs:{id:"_4-test-with-load-balancer-address-with-postman"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-test-with-load-balancer-address-with-postman"}},[t._v("#")]),t._v(" 4. Test with Load Balancer address with Postman")]),t._v(" "),a("p",[t._v("So, now we should run some Postman test. But what is the URL?")]),t._v(" "),a("p",[t._v('In the ECS service definition, we created an application load balancer. This will be the "front door" URL for your API service cluster.')]),t._v(" "),a("p",[t._v("To find the load balancer's public DNS name, we need to go to the EC2 Console section of AWS.")]),t._v(" "),a("p",[t._v("Click on the "),a("strong",[t._v("Services")]),t._v(" top menu drop-down and then select "),a("strong",[t._v("EC2")]),t._v(" from the top of the "),a("em",[t._v("Compute")]),t._v(" service list.\n"),a("img",{attrs:{src:s(409),alt:"Navigate to EC2"}})]),t._v(" "),a("p",[t._v("This will take you to the main EC2 Dashboard. Select "),a("strong",[t._v("Load Balancers")]),t._v(" from the Resource options in the middle of the page.\n"),a("img",{attrs:{src:s(410),alt:"EC2 dashboard"}})]),t._v(" "),a("p",[t._v("You will now see the list of active load balancers on your AWS Classroom account. There should only be one at this point. Click the check box next to the name of your load balancer to see the details at the bottom of the screen.\n"),a("img",{attrs:{src:s(411),alt:"EC2 load balancer details"}})]),t._v(" "),a("p",[t._v("Copy the "),a("strong",[t._v("DNS name")]),t._v(" and use that as the hostname for your Postman tests.")]),t._v(" "),a("h4",{attrs:{id:"_5-link-to-load-balancer-in-client-app"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-link-to-load-balancer-in-client-app"}},[t._v("#")]),t._v(" 5. Link to Load Balancer in client app.")]),t._v(" "),a("p",[t._v("In a real app, you could now use this URL in the "),a("code",[t._v("fetch")]),t._v(" code of your frontend client application.")]),t._v(" "),a("p",[t._v('You would also want to turn on HTTPS for the load balancer, or your browser will block access to "mixed content requests". At the moment, the AWS Classroom accounts don\'t have access to the AWS Certificate Manager Service, so we cannot do this right now.')]),t._v(" "),a("h3",{attrs:{id:"congratulations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#congratulations"}},[t._v("#")]),t._v(" Congratulations!")]),t._v(" "),a("p",[t._v("You have successfully deployed a load balanced redundant API web service container cluster connected to a separate redundant database cluster — all hosted on Amazon Web Services.")]),t._v(" "),a("h2",{attrs:{id:"for-additional-resources"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-additional-resources"}},[t._v("#")]),t._v(" For additional resources")]),t._v(" "),a("p",[t._v("The procedure above is an excellent introduction to containers and AWS. This can be a great talking point in a job interview, but there is more to learn. Please review these additional online resources.")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://aws.amazon.com/ecs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Amazon Elastic Container Service"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://aws.amazon.com/fargate",target:"_blank",rel:"noopener noreferrer"}},[t._v("AWS Fargate"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://aws.amazon.com/vpc/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Amazon Virtual Private Cloud"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://aws.amazon.com/elasticloadbalancing",target:"_blank",rel:"noopener noreferrer"}},[t._v("Amazon Elastic Load Balancing"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://docs.docker.com/engine/docker-overview/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker overview"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.youtube.com/watch?v=YFl2mCHdv24",target:"_blank",rel:"noopener noreferrer"}},[t._v("Learn Docker in 12 Minutes"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.youtube.com/watch?v=Qw9zlE3t8Ko",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker Compose in 12 Minutes"),a("OutboundLink")],1)])])])],1)}),[],!1,null,null,null);e.default=n.exports}}]);