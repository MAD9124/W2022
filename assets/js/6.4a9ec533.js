(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{443:function(t,e,a){t.exports=a.p+"assets/img/client-server.bf583183.jpeg"},444:function(t,e,a){t.exports=a.p+"assets/img/web-app-evolution.522997b1.jpeg"},445:function(t,e,a){t.exports=a.p+"assets/img/mvc.85e01f97.jpeg"},446:function(t,e,a){t.exports=a.p+"assets/img/uri.57075a0a.jpeg"},447:function(t,e,a){t.exports=a.p+"assets/img/screenshot-postman-get-cars.f00a1802.png"},448:function(t,e,a){t.exports=a.p+"assets/img/screenshot-postman-get-cars-3.a568c2fb.png"},449:function(t,e,a){t.exports=a.p+"assets/img/screenshot-postman-post.28400b6d.png"},450:function(t,e,a){t.exports=a.p+"assets/img/screenshot-postman-put.5dc14808.png"},451:function(t,e,a){t.exports=a.p+"assets/img/screenshot-postman-patch.bd83251e.png"},452:function(t,e,a){t.exports=a.p+"assets/img/screenshot-postman-delete.20daa5e9.png"},516:function(t,e,a){"use strict";a.r(e);var s=a(42),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("WeekHeader",{attrs:{number:3,title:"Application Architecture and RESTful APIs"}}),t._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[t._v("Quiz 2: Node Modules "),s("Badge",{attrs:{text:"15 mins"}})],1),t._v(" "),s("p",[t._v("There will be a quiz today. It will be worth 2% of your final grade.")])]),t._v(" "),s("h2",{attrs:{id:"agenda"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#agenda"}},[t._v("#")]),t._v(" Agenda")]),t._v(" "),s("ul",[s("li",[t._v("AMA (15 min)")]),t._v(" "),s("li",[t._v("Quiz (20 min)")]),t._v(" "),s("li",[t._v("Break (10 min)")]),t._v(" "),s("li",[t._v("Application Architecture (20 min)")]),t._v(" "),s("li",[t._v("RESTful Web Services (10 min)")]),t._v(" "),s("li",[t._v("RESTful Express (10 min)\n"),s("ul",[s("li",[t._v("CRUD Routes")]),t._v(" "),s("li",[t._v("Route Parameters")]),t._v(" "),s("li",[t._v("Testing with POSTMAN")])])]),t._v(" "),s("li",[t._v("Break (10 min)")]),t._v(" "),s("li",[t._v("EX3-1 Express CRUD")])]),t._v(" "),s("h2",{attrs:{id:"application-architecture"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#application-architecture"}},[t._v("#")]),t._v(" Application Architecture")]),t._v(" "),s("p",[s("strong",[t._v("Web services, web APIs, REST APIs, RESTful web APIs ... what does it all mean?")])]),t._v(" "),s("h3",{attrs:{id:"what-is-an-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-is-an-api"}},[t._v("#")]),t._v(" What is an API?")]),t._v(" "),s("blockquote",[s("p",[t._v("An application program interface (API) is code that allows two software programs to communicate with each other. The API defines the correct way for a developer to write a program that requests services from an operating system (OS) or other application. APIs are implemented by function calls composed of verbs and nouns. The required syntax is described in the documentation of the application being called.")])]),t._v(" "),s("p",[t._v("An "),s("a",{attrs:{href:"https://searchmicroservices.techtarget.com/definition/application-program-interface-API",target:"_blank",rel:"noopener noreferrer"}},[t._v("Application Programming Interface"),s("OutboundLink")],1),t._v(" (API) is often thought of as a contract that describes a predictable method of accessing the data or functions implemented by another program or module. The shape of the data provided and the "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/Signature/Function",target:"_blank",rel:"noopener noreferrer"}},[t._v("function signatures"),s("OutboundLink")],1),t._v(" remain constant, even if the underlying implementation changes.")]),t._v(" "),s("h3",{attrs:{id:"what-is-a-web-service"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-is-a-web-service"}},[t._v("#")]),t._v(" What is a Web Service?")]),t._v(" "),s("p",[t._v("A web service is a software architectural pattern that exposes an API for remotely manipulating collections of resources via the stateless HTTP communications protocol.")]),t._v(" "),s("p",[t._v("Definition from Wikipedia")]),t._v(" "),s("blockquote",[s("p",[t._v("In a web service, the Web technology such as HTTP—originally designed for human-to-machine communication—is utilized for machine-to-machine communication, more specifically for transferring machine-readable file formats such as XML and JSON.")])]),t._v(" "),s("blockquote",[s("p",[t._v("In practice, a web service commonly provides an object-oriented web-based interface to a database server, utilized for example by another web server, or by a mobile app, that provides a user interface to the end user.")])]),t._v(" "),s("h3",{attrs:{id:"client-server-architecture"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#client-server-architecture"}},[t._v("#")]),t._v(" Client-Server Architecture")]),t._v(" "),s("p",[t._v("Web service are built on the broader client server architectural pattern which has a long history going back to the development of "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/ARPANET",target:"_blank",rel:"noopener noreferrer"}},[t._v("ARPANET"),s("OutboundLink")],1),t._v(" in late 1960s. The core premise is that the responsibilities for various aspects of an application are separated, with some running on the client computers and some running on the centralized server. Clients could be desktop applications, native mobile applications, web applications, or hybrid applications.")]),t._v(" "),s("p",[t._v("The main benefits to this architectural model have changed over time, but it is still the prevailing choice for building modern applications. In the context of mobile application development, this allows for a "),s("strong",[t._v("single source of truth")]),t._v(" - meaning that no matter how many clients are using our application, the data is stored in one place and we will have data consistency across all clients.")]),t._v(" "),s("p",[t._v("The typical division of responsibilities has the client manage the presentation of data, user interaction events and navigation. The server is responsible for authentication, data validation and storage.")]),t._v(" "),s("p",[s("img",{attrs:{src:a(443),alt:"architecture diagram"}})]),t._v(" "),s("p",[t._v("How much application logic resides on the client v.s. the server has shifted over time, with the trend toward pushing more application logic out to the client.")]),t._v(" "),s("p",[s("img",{attrs:{src:a(444),alt:"evolution of web applications"}})]),t._v(" "),s("h3",{attrs:{id:"mvc-design-pattern"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mvc-design-pattern"}},[t._v("#")]),t._v(" MVC Design Pattern")]),t._v(" "),s("p",[t._v("There are many design patterns for building an application in the client-server architectural style. The most common for web and mobile apps is the "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller",target:"_blank",rel:"noopener noreferrer"}},[t._v("Model View Controller"),s("OutboundLink")],1),t._v(" (MVC) pattern and it derivatives such as "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel",target:"_blank",rel:"noopener noreferrer"}},[t._v("Model View View-model"),s("OutboundLink")],1),t._v(" (MVVM).")]),t._v(" "),s("p",[t._v("Organizing our code in this way allows us to break the application problem space down into smaller chunks each with specific areas of responsibility. This makes it easier to reason about our code and automate testing.")]),t._v(" "),s("p",[t._v("The MVC pattern divides responsibilities along these lines ...")]),t._v(" "),s("p",[s("strong",[t._v("Model")]),t._v(": data objects\n"),s("img",{staticStyle:{float:"right",width:"50%"},attrs:{src:a(445)}})]),t._v(" "),s("p",[t._v("Model classes define the data shape (what properties an object has) and the business rules that affect data validation and behavioural capabilities. They also manage the object instance life cycle - the persistence and retrieval of data from a permanent storage location such as a database.")]),t._v(" "),s("p",[s("strong",[t._v("Controller")]),t._v(": data request handling")]),t._v(" "),s("p",[t._v("These modules are the traffic cops of our applications. They define the route handlers for a web service's API endpoints. They will be responsible for ensuring that the user is authorized to make the request and that any data passed meets the validation requirements, before invoking the appropriate Model modules.")]),t._v(" "),s("p",[t._v("Controller modules are also responsible for correctly formatting the response data payload.")]),t._v(" "),s("p",[s("strong",[t._v("View")]),t._v(": user interface / presentation")]),t._v(" "),s("p",[t._v("View components receive response data from the controller modules and manage the display of that data in the user interface. They also respond to user interaction events and collect any new or updated data that needs to be forwarded to the controller for processing.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("This course will focus on building the Model and Controller elements of the MCV pattern.")])]),t._v(" "),s("h3",{attrs:{id:"clean-code"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clean-code"}},[t._v("#")]),t._v(" Clean code")]),t._v(" "),s("p",[t._v("As we build out our in-class examples and assignments throughout the remainder of this course. I will try to exemplify some of the 'Clean Code' best practice recommendations, with a particular focus on "),s("strong",[t._v("naming rules")]),t._v(", "),s("strong",[t._v("function rules")]),t._v(", "),s("strong",[t._v("comment rules")]),t._v(" and "),s("strong",[t._v("code structure")]),t._v(".")]),t._v(" "),s("blockquote",[s("p",[t._v("Code is clean if it can be understood easily – by everyone on the team. Clean code can be read and enhanced by a developer other than its original author. With understandability comes readability, changeability, extensibility and maintainability.")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://medium.com/mindorks/how-to-write-clean-code-lessons-learnt-from-the-clean-code-robert-c-martin-9ffc7aef870c",target:"_blank",rel:"noopener noreferrer"}},[t._v("Lessons learnt from “Clean Code”  —  Robert C. Martin"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://gist.github.com/wojteklu/73c6914cc446146b8b533c0988cf8d29",target:"_blank",rel:"noopener noreferrer"}},[t._v("Summary of 'Clean code' by Robert C. Martin"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Robert_C._Martin",target:"_blank",rel:"noopener noreferrer"}},[t._v("Uncle Bob Martin"),s("OutboundLink")],1),t._v(" has written many books over the years - not all of them an easy read, but "),s("em",[t._v("Clean code : a handbook of agile software craftsmanship")]),t._v(" (available in the Algonquin College Library) should be on every professional developer's (re)reading list. As you progress through your career, you will get new insights from revisiting this text.")]),t._v(" "),s("h2",{attrs:{id:"restful-web-services"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#restful-web-services"}},[t._v("#")]),t._v(" RESTful Web Services")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("History of REST")]),t._v(" "),s("p",[t._v("The REST architectural style was created by "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Roy_Fielding",target:"_blank",rel:"noopener noreferrer"}},[t._v("Roy Fielding"),s("OutboundLink")],1),t._v(" in parallel with the development of the HTTP v1.1 protocol from 1996 - 1999. Fielding outlined the principles and constraints of a RESTfull web service in his PhD dissertation published in 2000.")])]),t._v(" "),s("p",[t._v("OK, we know what an API is and that web services are a way to expose an API over the internet using the same protocols as web browsers. So, what about RESTful APIs or RESTful web services?")]),t._v(" "),s("p",[t._v("RESTful web services are web services that follow the Representational State Transfer (REST) architectural style by exposing an API that defines all actions with respect to a given resource URI organized to correspond to one of the standard "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Create,_read,_update_and_delete",target:"_blank",rel:"noopener noreferrer"}},[t._v("C.R.U.D."),s("OutboundLink")],1),t._v(" operations mapped to the HTTP verbs.")]),t._v(" "),s("div",{staticStyle:{width:"100%",height:"0","padding-bottom":"76%",position:"relative"}},[s("iframe",{staticClass:"giphy-embed",staticStyle:{position:"absolute"},attrs:{src:"https://giphy.com/embed/9kxEcIwrLNTcQ",width:"100%",height:"100%",frameBorder:"0",allowFullScreen:""}})]),s("p",[s("a",{attrs:{href:"https://giphy.com/gifs/9kxEcIwrLNTcQ"}},[t._v("via GIPHY")])]),t._v(" "),s("p",[t._v("Let's unpack that into smaller pieces, starting with a review of some helpful definitions.")]),t._v(" "),s("h3",{attrs:{id:"definitions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#definitions"}},[t._v("#")]),t._v(" Definitions")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("REST")]),t._v(": "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Representational_state_transfer",target:"_blank",rel:"noopener noreferrer"}},[t._v("Representational state transfer"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("strong",[t._v("JSON")]),t._v(": "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/JSON",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript Object Notation"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("strong",[t._v("Resource")]),t._v(": A class of data objects")]),t._v(" "),s("li",[s("strong",[t._v("Resource Path")]),t._v(": The path portion of the "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Uniform_Resource_Identifier",target:"_blank",rel:"noopener noreferrer"}},[t._v("URI"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("strong",[t._v("Endpoint")]),t._v(": The full URI including the path")]),t._v(" "),s("li",[s("strong",[t._v("Route")]),t._v(": The combination of the resource path and the HTTP verb")]),t._v(" "),s("li",[s("strong",[t._v("CRUD")]),t._v(": Create, Read, Update, Delete")])]),t._v(" "),s("h3",{attrs:{id:"resource-data-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resource-data-model"}},[t._v("#")]),t._v(" Resource / Data Model")]),t._v(" "),s("p",[t._v("A core concept in this API design pattern is creating representational data models to define the properties and methods for discrete object components in an application. We refer to these objects as "),s("em",[t._v("resources")]),t._v(" or "),s("em",[t._v("collections")]),t._v(" of resources.")]),t._v(" "),s("p",[t._v("Suppose that we were building an attendance tracking application. As we think about the problem, two obvious object types (or resources) come to mind:")]),t._v(" "),s("ul",[s("li",[t._v("students")]),t._v(" "),s("li",[t._v("classes")])]),t._v(" "),s("p",[t._v("Our application would need to keep track of these objects and how they related to each other. We will dig into this topic in more detail in weeks 5 and 6.")]),t._v(" "),s("h3",{attrs:{id:"api-endpoint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api-endpoint"}},[t._v("#")]),t._v(" API Endpoint")]),t._v(" "),s("p",[t._v("Because we will be using HTTP to act on these resources, we typically construct our URIs using the collective noun form of each resource type as the path. If our fictional application were hosted with the hostname "),s("code",[t._v("api")]),t._v(" on the domain name "),s("code",[t._v("attendance.io")]),t._v(", the URI for the "),s("code",[t._v("students")]),t._v(" collection resource would be")]),t._v(" "),s("p",[s("img",{attrs:{src:a(446),alt:"https://api.attendance.io/students"}})]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("Port number is optional")]),t._v(" "),s("p",[t._v("If it is omitted, the default port for the scheme will be used.")])]),t._v(" "),s("br"),t._v(" "),s("h3",{attrs:{id:"map-http-to-crud"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map-http-to-crud"}},[t._v("#")]),t._v(" Map HTTP to CRUD")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("CRUD Action")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("HTTP Verb")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Resource Path")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Create")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("POST")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("/students")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Create a new member of the resource collection")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Read")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("GET")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("/students")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Retrieve the entire resource collection (results may be paginated)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Read")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("GET")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("/students/1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Retrieve a specific member of the collection if the path includes a unique identifier segment")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Update")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("PUT")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("/students/1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Replace all properties of a given member of the resource collection")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Update")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("PATCH")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("/students/1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Update certain properties of a given member of the resource collection")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Delete")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("DELETE")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("/students/1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Remove a given member from the resource collection")])])])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("Clarification")]),t._v(" "),s("p",[t._v("Some of the example resource paths above use the unique resource identifier "),s("code",[t._v("1")]),t._v(". This is just an example. You would replace "),s("code",[t._v("1")]),t._v(" with the correct id value for the desired member of the collection that you wish to act upon.")])]),t._v(" "),s("h3",{attrs:{id:"response-codes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#response-codes"}},[t._v("#")]),t._v(" Response Codes")]),t._v(" "),s("p",[t._v("For each client request received by the server a response should be sent. Included in the header information of that response is a status code. The most common response codes used with RESTful web services are:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"right"}},[t._v("Code")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Message")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("200")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("OK")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("The request has succeeded.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("201")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Created")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("400")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Bad Request")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("The server cannot or will not process the request due to something that is perceived to be a client error. This includes resource object property validation errors.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("401")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Unauthorized")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('Although the HTTP standard specifies "unauthorized", semantically this response means "unauthenticated". That is, the client must authenticate itself to get the requested response.')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("403")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Forbidden")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("The client does not have access rights to the content, i.e. they are unauthorized, so server is rejecting to give proper response. Unlike 401, the client's identity is known to the server.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("404")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Not found")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("429")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Too many requests")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('The user has sent too many requests in a given amount of time ("rate limiting").')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"right"}},[t._v("500")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Internal server error")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("The server has encountered a situation it doesn't know how to handle. For example, the application server cannot communicate with the database.")])])])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("You may still see some web services responding with status code 422 (unprocessable entity) for data validation errors. This used to be quite common. However, the current standards compliant best practice is to use status code 400.")])]),t._v(" "),s("p",[t._v("The full list of "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status",target:"_blank",rel:"noopener noreferrer"}},[t._v("standard HTTP response codes"),s("OutboundLink")],1),t._v(" is detailed on the MDN Web Docs site.")]),t._v(" "),s("h2",{attrs:{id:"restful-express"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#restful-express"}},[t._v("#")]),t._v(" RESTful Express")]),t._v(" "),s("p",[t._v("The Express framework for Node.js makes it easy to define RESTful route handlers. The Express "),s("code",[t._v("app")]),t._v(" object has convenient methods that correspond to each of the HTTP verbs. So, for a given resource path like "),s("code",[t._v("/api/cars")]),t._v(" from last week's exercise, we can define a full set of CRUD route handlers like this ...")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/cars/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// return a collection of cars")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/cars/:id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// return the car matching the id value")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/cars/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// create a new car")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("patch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/cars/:id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update some properties of a car")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/cars/:id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// replace all properties of a car")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/cars/:id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// destroy the record for a car")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("post()")]),t._v(", "),s("code",[t._v("patch()")]),t._v(", and "),s("code",[t._v("put()")]),t._v(" methods all expect a JSON object in the request body. We need to tell our Express app how to parse the request body.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("express"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("h3",{attrs:{id:"route-parameters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#route-parameters"}},[t._v("#")]),t._v(" Route Parameters")]),t._v(" "),s("p",[t._v("In order to apply actions to specific members of a resource collection, we need to be able to capture their unique id from the resource path of the URI. Express makes this simple. "),s("a",{attrs:{href:"https://expressjs.com/en/guide/routing.html#route-parameters",target:"_blank",rel:"noopener noreferrer"}},[t._v("From the docs"),s("OutboundLink")],1),t._v(" ...")]),t._v(" "),s("blockquote",[s("p",[t._v("Route parameters are named URL segments that are used to capture the values specified at their position in the URL. The captured values are populated in the "),s("code",[t._v("request.params")]),t._v(" object, with the name of the route parameter specified in the path as their respective keys.")])]),t._v(" "),s("p",[t._v("In our route handler functions, we can access the named route parameters via the "),s("code",[t._v("params")]),t._v(" property of the "),s("code",[t._v("request")]),t._v(" object. In the example routes above we have "),s("code",[t._v("/cars/:id")]),t._v(". The “id” property is available as "),s("code",[t._v("request.params.id")]),t._v(".")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("request.params")]),t._v(" object defaults to "),s("code",[t._v("{}")]),t._v(" (an empty object) if there are no route parameters defined.")]),t._v(" "),s("h3",{attrs:{id:"route-prefix"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#route-prefix"}},[t._v("#")]),t._v(" Route Prefix")]),t._v(" "),s("p",[t._v("To simplify our code and reduce the opportunity for typos in the route path, we can use the "),s("code",[t._v("app.route()")]),t._v(" method to get a route object and then chain our HTTP verb methods onto that.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("app\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("route")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/cars'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\napp\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("route")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/cars/:id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("patch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("Method Chaining?")]),t._v(" "),s("p",[t._v('Confused about how method chaining works in JavaScript? It comes from the idea that each function should be responsible for a single task, and is part of writing "Clean Code". In the examples above, all of the methods are being called on the '),s("code",[t._v("app")]),t._v(" object, and each method returns that same object when it has completed it's task. The returned valued ("),s("code",[t._v("app")]),t._v(") is then the active context for the next method call. Each method is called synchronously in the order listed.")]),t._v(" "),s("p",[t._v("Read more about how it works in this short Medium article, "),s("a",{attrs:{href:"https://medium.com/backticks-tildes/understanding-method-chaining-in-javascript-647a9004bd4f",target:"_blank",rel:"noopener noreferrer"}},[t._v("Understanding Method Chaining In Javascript"),s("OutboundLink")],1),t._v(", and check out Steve Griffith's video, "),s("a",{attrs:{href:"https://www.youtube.com/watch?v=gHTUtEZVIzE",target:"_blank",rel:"noopener noreferrer"}},[t._v("How to Chain JS Methods Together"),s("OutboundLink")],1),t._v(".")])]),t._v(" "),s("h3",{attrs:{id:"manual-testing-with-postman"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#manual-testing-with-postman"}},[t._v("#")]),t._v(" Manual testing with Postman")]),t._v(" "),s("p",[t._v("Postman is a fantastic tool to assist in developing web service APIs. At the simplest level it is a special HTTP client that let's you easily manipulate the header and body content to test API endpoints. We can also use JavaScript to automate some of our tests.")]),t._v(" "),s("p",[t._v("Postman has an extremely rich set of capabilities to help throughout the full development lifecycle. You can see the promotional video to get an idea.")]),t._v(" "),s("iframe",{attrs:{width:"740",height:"416",src:"https://www.youtube.com/embed/VxY_cz0VQXE",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}}),t._v(" "),s("p",[t._v("We will be using Postman throughout the course as part of our testing regimen. We will start today with manual testing of our Express route handlers.")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.getpostman.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Download Postman"),s("OutboundLink")],1),t._v(" and run the installer.")]),t._v(" "),s("h2",{attrs:{id:"ex3-1-express-crud"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ex3-1-express-crud"}},[t._v("#")]),t._v(" EX3-1 Express CRUD")]),t._v(" "),s("p",[t._v("Let's take the example "),s("code",[t._v("/api/cars")]),t._v(" routes from above and make them functional.")]),t._v(" "),s("h3",{attrs:{id:"prepare-a-week3-project-folder"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prepare-a-week3-project-folder"}},[t._v("#")]),t._v(" Prepare a "),s("code",[t._v("week3")]),t._v(" project folder")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" week3\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" week3\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".DS_Store'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('node_modules/"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" .gitignore\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"'use strict'\"")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" app.js\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" init -y\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" express\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Initialize project folder"')]),t._v("\n")])])]),s("p",[t._v("Copy your "),s("code",[t._v("cars.js")]),t._v(" file from last week's project folder.")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/week2/cars.js ./cars.js\n")])])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("cars.js")]),t._v(" "),s("p",[t._v("If you had trouble with last week's exercise, here is the "),s("code",[t._v("cars.js")]),t._v(" file.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cars "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" make"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tesla'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'S'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" colour"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Black'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" make"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tesla'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" colour"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Red'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" make"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tesla'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'X'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" colour"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Silver'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" make"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tesla'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Y'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" colour"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Chestnut Brown'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("cars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("p",[t._v("Open the project folder in your code editor.")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("code "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),s("p",[t._v("Stub out the "),s("code",[t._v("app.js")]),t._v(" file.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'use strict'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// load dependencies")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("cars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./cars.js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" express "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'express'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// create the express app")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" app "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("express")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// configure express middleware")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("express"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// define routes")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/cars'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/cars/:carId'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/cars'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("patch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/cars/:carId'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/cars/:carId'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/cars/:carId'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// start listening for HTTP requests")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PORT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3030")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PORT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("Server listening on port ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PORT")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" ...")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Get the port number from an environment variable")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("process.env.port")]),t._v(" reference above is checking if we have defined a value for the port in an environment variable. If it exists, that value will be assigned to our application's "),s("code",[t._v("port")]),t._v(" variable. Otherwise, the default value of "),s("code",[t._v("3030")]),t._v(" will be assigned.")]),t._v(" "),s("p",[t._v("This code uses the "),s("code",[t._v("||")]),t._v(" "),s("a",{attrs:{href:"https://javascript.info/logical-operators",target:"_blank",rel:"noopener noreferrer"}},[t._v("logical or operator"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("We will talk more about using environment variables to customize your Node app in the course module called "),s("em",[t._v("Production Preparation")]),t._v(".")])]),t._v(" "),s("h3",{attrs:{id:"_1-list-the-cars-collection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-list-the-cars-collection"}},[t._v("#")]),t._v(" 1. List the cars collection")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/cars'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" cars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Now lets test it with Postman. We need to create a new "),s("code",[t._v("get")]),t._v(" request in Postman with the URI of our route above: "),s("code",[t._v("localhost:3030/api/cars")])]),t._v(" "),s("p",[t._v("Because it is a simple get request, we don't need to specify any other details (no special headers or body content). Just go ahead and click the big blue [Send] button, and then look at the returned results in the lower portion of the screen.")]),t._v(" "),s("p",[s("img",{attrs:{src:a(447),alt:"screenshot"}})]),t._v(" "),s("p",[t._v("This returns the entire collection of car objects as an array. In later modules you will learn how to break up very large result sets into chunks using pagination.")]),t._v(" "),s("h3",{attrs:{id:"_2-retrieve-a-single-car-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-retrieve-a-single-car-object"}},[t._v("#")]),t._v(" 2. Retrieve a single car object")]),t._v(" "),s("p",[t._v("When we know that we are only interested in one particular resource object, and we know it's unique identifier, we append the object's unique id value to the route in the client application (browser, Postman, mobile app) e.g. "),s("code",[t._v("/api/cars/3")]),t._v(". In the route handler function on the server we will use that "),s("code",[t._v("carId")]),t._v(" named parameter to with the "),s("a",{attrs:{href:"https://javascript.info/array-methods#find-and-findindex",target:"_blank",rel:"noopener noreferrer"}},[t._v("Array.find()"),s("OutboundLink")],1),t._v(" method to return the requested object.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/cars/:carId'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" car "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("car")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" car"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("carId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" car"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("Notice that we need to use the "),s("code",[t._v("parseInt()")]),t._v(" function because all parameter values from the HTTP URI are processed with the type "),s("code",[t._v("string")]),t._v(" and we want to compare it to a "),s("code",[t._v("number")]),t._v(".")])]),t._v(" "),s("p",[t._v("OK. Test it with Postman.")]),t._v(" "),s("p",[s("img",{attrs:{src:a(448),alt:"screenshot"}})]),t._v(" "),s("h3",{attrs:{id:"_3-create-a-new-car-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-create-a-new-car-object"}},[t._v("#")]),t._v(" 3. Create a new car object")]),t._v(" "),s("p",[t._v("To create a new resource object we use the base collection route, or resource route, (e.g. "),s("code",[t._v("/api/cars")]),t._v(") but with the HTTP verb "),s("code",[t._v("POST")]),t._v(". Pass the details for the object that you want to create as a JSON document in the body of the request. Remember earlier we told Express to parse the request body as JSON with the "),s("code",[t._v("app.use(express.json())")]),t._v(" directive.")]),t._v(" "),s("p",[t._v("We will talk about more robust data validation in later modules, but for now we will simply extract the object properties that we know we need from the request body and create a new unique id using the "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now",target:"_blank",rel:"noopener noreferrer"}},[t._v("Date.now()"),s("OutboundLink")],1),t._v(" method to get an integer representing the number of milliseconds since midnight on January 1st, 1970. There are better ways to generate a unique id but this will do for now.")]),t._v(" "),s("p",[t._v("Now we have all of the data properties for a new car object and we can use the "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push",target:"_blank",rel:"noopener noreferrer"}},[t._v("array.push()"),s("OutboundLink")],1),t._v(" method to add the new object to our in-memory collection.")]),t._v(" "),s("p",[t._v("Lastly, we need to return the newly created object back to the requesting client. Express will use the "),s("code",[t._v("200")]),t._v(" status code by default, which is OK, but it is a better practice to send a "),s("code",[t._v("201 Created")]),t._v(" status when successfully processing a create request. Chain on the "),s("code",[t._v("res.status(201)")]),t._v(" method before the "),s("code",[t._v("send()")]),t._v(" method.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/cars'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("make"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" colour"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newCar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    make"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    colour\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  cars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newCar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("status")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("201")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" newCar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("OK. Test it with Postman.")]),t._v(" "),s("ul",[s("li",[t._v("Create a new request tab.")]),t._v(" "),s("li",[t._v("Set the type to POST with the same URI: "),s("code",[t._v("localhost:3030/api/cars")])]),t._v(" "),s("li",[t._v("Under the URI box select the "),s("code",[t._v("body")]),t._v(" tab")]),t._v(" "),s("li",[t._v("Under body, select the "),s("code",[t._v("raw")]),t._v(" type")]),t._v(" "),s("li",[t._v("From the dropdown menu at the end of that row, select "),s("code",[t._v("JSON (application/json)")])]),t._v(" "),s("li",[t._v("Create the JSON document in the large text box in the middle of the screen.")])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"make"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Tesla"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"model"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Semi"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"colour"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Silver"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Click the blue send button")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(449),alt:"screenshot"}})]),t._v(" "),s("h3",{attrs:{id:"_4-update-replace-an-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-update-replace-an-object"}},[t._v("#")]),t._v(" 4. Update (replace) an object")]),t._v(" "),s("p",[t._v("There are two methods of updating a resource object: replace and patch. Let's look at the replace method first.")]),t._v(" "),s("p",[t._v("It is similar to the create method, but uses the HTTP verb "),s("code",[t._v("PUT")]),t._v(" rather than "),s("code",[t._v("POST")]),t._v(". The request body contains a JSON document with the "),s("em",[t._v("complete")]),t._v(" resource object. The URI includes the id in the path just like the "),s("code",[t._v("GET")]),t._v(" request.")]),t._v(" "),s("p",[t._v("The route handler function will extract the object properties and update the collection.")]),t._v(" "),s("p",[t._v("Get the target object's id from the "),s("code",[t._v("req.params")]),t._v(", so that we can find the index of that object in our collection array. The "),s("code",[t._v("array.findIndex()")]),t._v(" method works similarly to the "),s("code",[t._v("array.find()")]),t._v(" method, but returns the array index of the matching element rather than the element itself.")]),t._v(" "),s("p",[t._v("Following the happy path (no errors), we will extract the resource properties from the "),s("code",[t._v("req.body")]),t._v(", excluding the "),s("code",[t._v("id")]),t._v(" property. "),s("strong",[t._v("The client should never be allowed to change the unique id of an object.")])]),t._v(" "),s("p",[t._v("Using these properties and the "),s("code",[t._v("carId")]),t._v(" from the "),s("code",[t._v("req.params")]),t._v(", construct a new resource object and assign it to the collection index position of the old object. Finally return the updated object with a "),s("code",[t._v("200")]),t._v(" status code.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/cars/:carId'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("carId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("car")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" car"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("make"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" colour"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" updatedCar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" make"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" colour"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  cars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" updatedCar\n  res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" updatedCar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("But, what if the client sent a request with an invalid resource id?")]),t._v(" "),s("p",[t._v("We need to check if we found a valid index. The "),s("code",[t._v("findIndex()")]),t._v(" method returns a value of "),s("code",[t._v("-1")]),t._v(" if there was no match and we should send a "),s("code",[t._v("404 error")]),t._v(" response. Our request handler should now look like this ...")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/cars/:carId'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("carId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("car")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" car"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("status")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      errors"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          status"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'404'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          title"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Resource does not exist'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          description"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("We could not find a car with id: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("make"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" colour"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" updatedCar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" make"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" colour"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    cars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" updatedCar\n    res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" updatedCar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("The format of the "),s("code",[t._v("errors")]),t._v(" return value follows the best practice described in the JSON:API specification, which we will look at in more detail in the module on "),s("em",[t._v("Consistent Error Handling")]),t._v(".")])]),t._v(" "),s("p",[t._v("OK. Test it with Postman.")]),t._v(" "),s("ul",[s("li",[t._v("duplicate the current request tab")]),t._v(" "),s("li",[t._v("change the method to "),s("code",[t._v("PUT")])]),t._v(" "),s("li",[t._v("resubmit the "),s("code",[t._v("POST")]),t._v(" request")]),t._v(" "),s("li",[t._v("copy the id from the response body of the POST request and add it to the URI of the PUT request")]),t._v(" "),s("li",[t._v("edit the JSON body to change the colour to "),s("code",[t._v("Sunburst Orange")])]),t._v(" "),s("li",[t._v("click the blue send button")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(450),alt:"screenshot"}})]),t._v(" "),s("h3",{attrs:{id:"_5-update-partial-an-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-update-partial-an-object"}},[t._v("#")]),t._v(" 5. Update (partial) an object")]),t._v(" "),s("p",[t._v("In a partial update, the client constructs the request body with only the properties that have changed for a given object. The request URI is the same as the "),s("code",[t._v("PUT")]),t._v(" method, the HTTP verb is changed to "),s("code",[t._v("PATCH")]),t._v(".")]),t._v(" "),s("p",[t._v("Start by copying the code from the "),s("code",[t._v("PUT")]),t._v(" request handler. We will change the first two lines in the "),s("code",[t._v("else")]),t._v(" block.")]),t._v(" "),s("p",[t._v("First let's change how we extract the object properties from the "),s("code",[t._v("req.body")]),t._v(". We will use JavaScript's "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Rest_in_Object_Destructuring",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rest operator in object destructuring"),s("OutboundLink")],1),t._v(". This means we can isolate and ignore the "),s("code",[t._v("id")]),t._v(" property if it is included in the "),s("code",[t._v("req.body")]),t._v(" and stuff all of the remaining properties into a new object variable (every so cleverly named "),s("code",[t._v("theRest")]),t._v(" in this example).")]),t._v(" "),s("p",[t._v("The second trick is to use the "),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object.assign()"),s("OutboundLink")],1),t._v(" function to merge the old car object with the updated properties contained in our "),s("code",[t._v("theRest")]),t._v(" variable.")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("div",{staticClass:"highlight-lines"},[s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("patch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api/cars/:carId'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findIndex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("car")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" car"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("carId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("status")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      errors"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          status"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'404'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          title"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Resource does not exist'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          description"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("We could not find a car with id: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("theRest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" updatedCar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" theRest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    cars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" updatedCar\n    res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" updatedCar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("OK. Test it with Postman.")]),t._v(" "),s("ul",[s("li",[t._v("duplicate the current request tab")]),t._v(" "),s("li",[t._v("change the method to "),s("code",[t._v("PATCH")])]),t._v(" "),s("li",[t._v("resubmit the "),s("code",[t._v("POST")]),t._v(" request")]),t._v(" "),s("li",[t._v("copy the id from the response body of the POST request and add it to the URI of the PATCH request")]),t._v(" "),s("li",[t._v("edit the JSON body to change the colour to "),s("code",[t._v("Candy Apple Red")])]),t._v(" "),s("li",[t._v("click the blue send button")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(451),alt:"screenshot"}})]),t._v(" "),s("h3",{attrs:{id:"_6-delete-an-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-delete-an-object"}},[t._v("#")]),t._v(" 6. Delete an object")]),t._v(" "),s("p",[t._v("OK. You have seen the pattern. Now complete this last one on your own.")]),t._v(" "),s("ul",[s("li",[t._v("The HTTP verb is DELETE")]),t._v(" "),s("li",[t._v("A delete request has no request body")]),t._v(" "),s("li",[t._v("Check to see if the carId parameter exists, send an error if not")]),t._v(" "),s("li",[t._v("Find the index of the car object in the array")]),t._v(" "),s("li",[t._v("Remove that one element from the array ("),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice",target:"_blank",rel:"noopener noreferrer"}},[t._v("hint"),s("OutboundLink")],1),t._v(")")]),t._v(" "),s("li",[t._v("Return the removed object in the response with a 200 success code")])]),t._v(" "),s("p",[t._v("Test it with Postman. It should look like this ...")]),t._v(" "),s("p",[s("img",{attrs:{src:a(452),alt:"screenshot"}})]),t._v(" "),s("h3",{attrs:{id:"submit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#submit"}},[t._v("#")]),t._v(" Submit")]),t._v(" "),s("p",[t._v("Create a new private repo on GitHub named "),s("strong",[t._v("mad9124-w21-ex3-1-express-crud")]),t._v(".")]),t._v(" "),s("p",[t._v("Make sure that you have initialized your local project folder with "),s("code",[t._v("git init")]),t._v(" and have created a "),s("code",[t._v(".gitignore")]),t._v(" file to exclude the "),s("code",[t._v("node_modules")]),t._v(" folder from your git archive.")]),t._v(" "),s("p",[t._v("Create a commit to include all of your work from today.")]),t._v(" "),s("p",[t._v("Link the local repo to the GitHub repo and sync them up.")]),t._v(" "),s("p",[t._v("Remember to add me as a collaborator so that I can see your code, and submit the GitHub repo's URL on Brightspace.")]),t._v(" "),s("h2",{attrs:{id:"for-next-week"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for-next-week"}},[t._v("#")]),t._v(" For next week")]),t._v(" "),s("p",[t._v("Before next week's class, please read these additional online resources.")]),t._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:"http://javascript.info/object#cloning-and-merging-object-assign",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript: Cloning and merging, Object.assign"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"http://javascript.info/destructuring-assignment",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript: Destructuring assignment"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://hackernoon.com/restful-api-design-step-by-step-guide-2f2c9f9fcdbf",target:"_blank",rel:"noopener noreferrer"}},[t._v("RESTful API Design — Step By Step Guide"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://expressjs.com/en/starter/basic-routing.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Express Documentation: Basic Routing"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://blog.bitsrc.io/a-beginners-guide-to-server-side-web-development-with-node-js-17385da09f93",target:"_blank",rel:"noopener noreferrer"}},[t._v("A Beginner’s Guide to Server-Side Web Development with Node.js"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://expressjs.com/en/guide/routing.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Express Documentation: Routing Guide"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://medium.com/mindorks/how-to-write-clean-code-lessons-learnt-from-the-clean-code-robert-c-martin-9ffc7aef870c",target:"_blank",rel:"noopener noreferrer"}},[t._v("Lessons learnt from “Clean Code”  —  Robert C. Martin"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://www.youtube.com/watch?v=t5n07Ybz7yI",target:"_blank",rel:"noopener noreferrer"}},[t._v("Introduction to Postman"),s("OutboundLink")],1),t._v(" "),s("Badge",{attrs:{text:"video"}})],1)]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://www.youtube.com/watch?v=_LqgURg3BXw",target:"_blank",rel:"noopener noreferrer"}},[t._v("How to use NPM"),s("OutboundLink")],1),t._v(" "),s("Badge",{attrs:{text:"video"}})],1)]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://www.youtube.com/watch?v=P2LdhPpqSiU",target:"_blank",rel:"noopener noreferrer"}},[t._v("What is JSON"),s("OutboundLink")],1),t._v(" "),s("Badge",{attrs:{text:"video"}})],1)]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://www.youtube.com/watch?v=912_cPllMyg",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSON vs JS Objects"),s("OutboundLink")],1),t._v(" "),s("Badge",{attrs:{text:"video"}})],1)])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("Quiz")]),t._v(" "),s("p",[t._v("There will be a short quiz next class. The questions could come from any of the material referenced above.")])])],1)}),[],!1,null,null,null);e.default=n.exports}}]);